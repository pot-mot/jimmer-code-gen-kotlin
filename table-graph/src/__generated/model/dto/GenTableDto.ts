import type { QueryType, SortDirection } from '../enums';

export type GenTableDto = {
    'GenTableFetchers/TABLE_FETCHER': {
        readonly id: number, 
        readonly tableName: string, 
        readonly tableComment: string, 
        readonly tableType: string
    }, 
    'GenTableFetchers/TABLE_COLUMN_FETCHER': {
        readonly id: number, 
        readonly tableName: string, 
        readonly tableComment: string, 
        readonly tableType: string, 
        readonly columns: ReadonlyArray<{
            readonly id: number, 
            readonly columnSort: number, 
            readonly columnName: string, 
            readonly columnType: string, 
            readonly columnDisplaySize: number, 
            readonly columnPrecision: number, 
            readonly columnDefault: string, 
            readonly columnComment: string, 
            readonly isPk: boolean, 
            readonly isAutoIncrement: boolean, 
            readonly isUnique: boolean, 
            readonly isNotNull: boolean, 
            readonly isVirtualColumn: boolean
        }>
    }, 
    'GenTableFetchers/CLASS_FETCHER': {
        readonly id: number, 
        readonly className: string, 
        readonly classComment: string, 
        readonly packageName: string, 
        readonly moduleName: string, 
        readonly functionName: string, 
        readonly author: string, 
        readonly genPath: string, 
        readonly isAdd: boolean, 
        readonly isEdit: boolean, 
        readonly isList: boolean, 
        readonly isQuery: boolean, 
        readonly orderKey: number
    }, 
    'GenTableFetchers/CLASS_COLUMN_FETCHER': {
        readonly id: number, 
        readonly className: string, 
        readonly classComment: string, 
        readonly packageName: string, 
        readonly moduleName: string, 
        readonly functionName: string, 
        readonly author: string, 
        readonly genPath: string, 
        readonly isAdd: boolean, 
        readonly isEdit: boolean, 
        readonly isList: boolean, 
        readonly isQuery: boolean, 
        readonly orderKey: number, 
        readonly columns: ReadonlyArray<{
            readonly id: number, 
            readonly fieldName: string, 
            readonly fieldType: string, 
            readonly fieldComment: string, 
            readonly isList: boolean, 
            readonly listSort: number, 
            readonly isAdd: boolean, 
            readonly addSort: number, 
            readonly isAddRequired: boolean, 
            readonly isEdit: boolean, 
            readonly editSort: number, 
            readonly isEditRequired: boolean, 
            readonly readOnly: boolean, 
            readonly isQuery: boolean, 
            readonly querySort: number, 
            readonly queryType: QueryType, 
            readonly dictType: string, 
            readonly isSort: boolean, 
            readonly sortDirection: SortDirection, 
            readonly isLogicalDelete: boolean
        }>
    }, 
    'GenTableFetchers/SIMPLE_FETCHER': {
        readonly id: number, 
        readonly createdTime: string, 
        readonly modifiedTime: string, 
        readonly remark: string, 
        readonly tableName: string, 
        readonly tableComment: string, 
        readonly tableType: string, 
        readonly className: string, 
        readonly classComment: string, 
        readonly packageName: string, 
        readonly moduleName: string, 
        readonly functionName: string, 
        readonly author: string, 
        readonly genPath: string, 
        readonly isAdd: boolean, 
        readonly isEdit: boolean, 
        readonly isList: boolean, 
        readonly isQuery: boolean, 
        readonly orderKey: number
    }, 
    'GenTableFetchers/COLUMN_FETCHER': {
        readonly id: number, 
        readonly createdTime: string, 
        readonly modifiedTime: string, 
        readonly remark: string, 
        readonly tableName: string, 
        readonly tableComment: string, 
        readonly tableType: string, 
        readonly className: string, 
        readonly classComment: string, 
        readonly packageName: string, 
        readonly moduleName: string, 
        readonly functionName: string, 
        readonly author: string, 
        readonly genPath: string, 
        readonly isAdd: boolean, 
        readonly isEdit: boolean, 
        readonly isList: boolean, 
        readonly isQuery: boolean, 
        readonly orderKey: number, 
        readonly columns: ReadonlyArray<{
            readonly id: number, 
            readonly table: {readonly id: number}, 
            readonly columnSort: number, 
            readonly columnName: string, 
            readonly columnTypeCode: number, 
            readonly columnType: string, 
            readonly columnDisplaySize: number, 
            readonly columnPrecision: number, 
            readonly columnDefault: string, 
            readonly columnComment: string, 
            readonly isPk: boolean, 
            readonly isAutoIncrement: boolean, 
            readonly isUnique: boolean, 
            readonly isNotNull: boolean, 
            readonly isVirtualColumn: boolean, 
            readonly fieldName: string, 
            readonly fieldType: string, 
            readonly fieldComment: string, 
            readonly isList: boolean, 
            readonly listSort: number, 
            readonly isAdd: boolean, 
            readonly addSort: number, 
            readonly isAddRequired: boolean, 
            readonly isEdit: boolean, 
            readonly editSort: number, 
            readonly isEditRequired: boolean, 
            readonly readOnly: boolean, 
            readonly isQuery: boolean, 
            readonly querySort: number, 
            readonly queryType: QueryType, 
            readonly dictType: string, 
            readonly isSort: boolean, 
            readonly sortDirection: SortDirection, 
            readonly isLogicalDelete: boolean
        }>
    }
}