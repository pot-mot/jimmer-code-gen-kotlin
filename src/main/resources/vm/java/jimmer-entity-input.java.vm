##导入宏定义
$!{global.vm}

$!{define.vm}

#set($members = $tableInfo.fullColumn)

#filter($members, $inputIgnoreMembers)

##保存文件（宏定义）
#save("/$!{entityPath}/$!{inputPath}", "$!{inputSuffix}.java")

##包路径（宏定义）
#setPackageSuffix("$!{entityPath}.$!{inputPath}")

##自动导入包（全局变量）
$!{autoImport.vm}

import org.babyfish.jimmer.Input;

import org.mapstruct.BeanMapping;
import org.mapstruct.Mapper;
import org.mapstruct.ReportingPolicy;
import org.mapstruct.factory.Mappers;

#if($autoImportMember)
import $!{tableInfo.savePackageName}.$!{entityPath}.$!{tableInfo.name};
#end

##表注释（宏定义）
#tableComment(${inputComment})
public class $!{tableInfo.name}$!{inputSuffix} implements Input<$!{tableInfo.name}> {
#foreach($column in $members)
#if(${column.comment}  && ${memberComment})
    /**
     * ${column.comment}
     */
#end
    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};

#end

    private static final Converter CONVERTER = Mappers.getMapper(Converter.class);

    @Override
    public $!{tableInfo.name} toEntity() {
        return CONVERTER.to$!{tableInfo.name}(this);
    }

    @Mapper
    interface Converter {
        @BeanMapping(unmappedTargetPolicy = ReportingPolicy.IGNORE)
        $!{tableInfo.name} to$!{tableInfo.name}($!{tableInfo.name}$!{inputSuffix} input);
    }

#foreach($column in $members)
#if($streamInput)

    public $!{tool.getClsNameByFullName($column.type)} $!{column.name}() {
        return $!{column.name};
    }

    public $!{tableInfo.name}$!{inputSuffix} $!{column.name}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {
        this.$!{column.name} = $!{column.name};
        return this;
    }
#end

#getSetMethod($column)
#end
}