package top.potmot.model.associations.manyToMany

const val mysqlResult = """
[(all-tables.sql, DROP TABLE IF EXISTS `M_N_SOURCE`;
DROP TABLE IF EXISTS `M_N_TARGET`;

CREATE TABLE `M_N_SOURCE` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

CREATE TABLE `M_N_TARGET` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

DROP TABLE IF EXISTS `MANY_TO_MANY_MAPPING`;

CREATE TABLE `MANY_TO_MANY_MAPPING` (
    `M_N_SOURCE_ID` BIGINT NOT NULL,
    `M_N_TARGET_ID` BIGINT NOT NULL
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = '与的映射关系表'
  ROW_FORMAT = Dynamic;

ALTER TABLE `MANY_TO_MANY_MAPPING` ADD CONSTRAINT `PK_MANY_TO_MANY_MAPPING` PRIMARY KEY (`M_N_SOURCE_ID`,`M_N_TARGET_ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_S`
        FOREIGN KEY (`M_N_SOURCE_ID`)
            REFERENCES `M_N_SOURCE` (`ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_T`
        FOREIGN KEY (`M_N_TARGET_ID`)
            REFERENCES `M_N_TARGET` (`ID`);

), (m_n_source.sql, DROP TABLE IF EXISTS `M_N_SOURCE`;

CREATE TABLE `M_N_SOURCE` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

DROP TABLE IF EXISTS `MANY_TO_MANY_MAPPING`;

CREATE TABLE `MANY_TO_MANY_MAPPING` (
    `M_N_SOURCE_ID` BIGINT NOT NULL,
    `M_N_TARGET_ID` BIGINT NOT NULL
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = '与的映射关系表'
  ROW_FORMAT = Dynamic;

ALTER TABLE `MANY_TO_MANY_MAPPING` ADD CONSTRAINT `PK_MANY_TO_MANY_MAPPING` PRIMARY KEY (`M_N_SOURCE_ID`,`M_N_TARGET_ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_S`
        FOREIGN KEY (`M_N_SOURCE_ID`)
            REFERENCES `M_N_SOURCE` (`ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_T`
        FOREIGN KEY (`M_N_TARGET_ID`)
            REFERENCES `M_N_TARGET` (`ID`);

), (m_n_target.sql, DROP TABLE IF EXISTS `M_N_TARGET`;

CREATE TABLE `M_N_TARGET` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

)]
"""

const val postgresResult = """
[(all-tables.sql, DROP TABLE IF EXISTS "M_N_SOURCE" CASCADE;
DROP TABLE IF EXISTS "M_N_TARGET" CASCADE;

CREATE TABLE "M_N_SOURCE" (
    "ID" BIGSERIAL NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE "M_N_TARGET" (
    "ID" BIGSERIAL NOT NULL,
    PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS "MANY_TO_MANY_MAPPING" CASCADE;

CREATE TABLE "MANY_TO_MANY_MAPPING" (
    "M_N_SOURCE_ID" BIGINT NOT NULL,
    "M_N_TARGET_ID" BIGINT NOT NULL
);

ALTER TABLE "MANY_TO_MANY_MAPPING" ADD CONSTRAINT "PK_MANY_TO_MANY_MAPPING" PRIMARY KEY ("M_N_SOURCE_ID","M_N_TARGET_ID");

ALTER TABLE "MANY_TO_MANY_MAPPING"
    ADD CONSTRAINT "MANY_TO_MANY_MAPPING_S"
        FOREIGN KEY ("M_N_SOURCE_ID")
            REFERENCES "M_N_SOURCE" ("ID");

ALTER TABLE "MANY_TO_MANY_MAPPING"
    ADD CONSTRAINT "MANY_TO_MANY_MAPPING_T"
        FOREIGN KEY ("M_N_TARGET_ID")
            REFERENCES "M_N_TARGET" ("ID");

COMMENT ON TABLE "MANY_TO_MANY_MAPPING" IS '与的映射关系表';

), (m_n_source.sql, DROP TABLE IF EXISTS "M_N_SOURCE" CASCADE;

CREATE TABLE "M_N_SOURCE" (
    "ID" BIGSERIAL NOT NULL,
    PRIMARY KEY ("ID")
);

DROP TABLE IF EXISTS "MANY_TO_MANY_MAPPING" CASCADE;

CREATE TABLE "MANY_TO_MANY_MAPPING" (
    "M_N_SOURCE_ID" BIGINT NOT NULL,
    "M_N_TARGET_ID" BIGINT NOT NULL
);

ALTER TABLE "MANY_TO_MANY_MAPPING" ADD CONSTRAINT "PK_MANY_TO_MANY_MAPPING" PRIMARY KEY ("M_N_SOURCE_ID","M_N_TARGET_ID");

ALTER TABLE "MANY_TO_MANY_MAPPING"
    ADD CONSTRAINT "MANY_TO_MANY_MAPPING_S"
        FOREIGN KEY ("M_N_SOURCE_ID")
            REFERENCES "M_N_SOURCE" ("ID");

ALTER TABLE "MANY_TO_MANY_MAPPING"
    ADD CONSTRAINT "MANY_TO_MANY_MAPPING_T"
        FOREIGN KEY ("M_N_TARGET_ID")
            REFERENCES "M_N_TARGET" ("ID");

COMMENT ON TABLE "MANY_TO_MANY_MAPPING" IS '与的映射关系表';

), (m_n_target.sql, DROP TABLE IF EXISTS "M_N_TARGET" CASCADE;

CREATE TABLE "M_N_TARGET" (
    "ID" BIGSERIAL NOT NULL,
    PRIMARY KEY ("ID")
);

)]
"""

const val h2Result = """
[(all-tables.sql, DROP TABLE IF EXISTS `M_N_SOURCE` CASCADE;
DROP TABLE IF EXISTS `M_N_TARGET` CASCADE;

CREATE TABLE `M_N_SOURCE` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
);

CREATE TABLE `M_N_TARGET` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
);

DROP TABLE IF EXISTS `MANY_TO_MANY_MAPPING` CASCADE;

CREATE TABLE `MANY_TO_MANY_MAPPING` (
    `M_N_SOURCE_ID` BIGINT NOT NULL,
    `M_N_TARGET_ID` BIGINT NOT NULL
);

ALTER TABLE `MANY_TO_MANY_MAPPING` ADD CONSTRAINT `PK_MANY_TO_MANY_MAPPING` PRIMARY KEY (`M_N_SOURCE_ID`,`M_N_TARGET_ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_S`
        FOREIGN KEY (`M_N_SOURCE_ID`)
            REFERENCES `M_N_SOURCE` (`ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_T`
        FOREIGN KEY (`M_N_TARGET_ID`)
            REFERENCES `M_N_TARGET` (`ID`);

COMMENT ON TABLE `MANY_TO_MANY_MAPPING` IS '与的映射关系表';

), (m_n_source.sql, DROP TABLE IF EXISTS `M_N_SOURCE` CASCADE;

CREATE TABLE `M_N_SOURCE` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
);

DROP TABLE IF EXISTS `MANY_TO_MANY_MAPPING` CASCADE;

CREATE TABLE `MANY_TO_MANY_MAPPING` (
    `M_N_SOURCE_ID` BIGINT NOT NULL,
    `M_N_TARGET_ID` BIGINT NOT NULL
);

ALTER TABLE `MANY_TO_MANY_MAPPING` ADD CONSTRAINT `PK_MANY_TO_MANY_MAPPING` PRIMARY KEY (`M_N_SOURCE_ID`,`M_N_TARGET_ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_S`
        FOREIGN KEY (`M_N_SOURCE_ID`)
            REFERENCES `M_N_SOURCE` (`ID`);

ALTER TABLE `MANY_TO_MANY_MAPPING`
    ADD CONSTRAINT `MANY_TO_MANY_MAPPING_T`
        FOREIGN KEY (`M_N_TARGET_ID`)
            REFERENCES `M_N_TARGET` (`ID`);

COMMENT ON TABLE `MANY_TO_MANY_MAPPING` IS '与的映射关系表';

), (m_n_target.sql, DROP TABLE IF EXISTS `M_N_TARGET` CASCADE;

CREATE TABLE `M_N_TARGET` (
    `ID` BIGINT NOT NULL AUTO_INCREMENT,
    PRIMARY KEY (`ID`)
);

)]
"""
