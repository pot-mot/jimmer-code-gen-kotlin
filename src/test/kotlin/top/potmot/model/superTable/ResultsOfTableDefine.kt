package top.potmot.model.superTable

const val mysqlResult = """
[(all-tables.sql, DROP TABLE IF EXISTS `USER`;
DROP TABLE IF EXISTS `RESOURCE`;

CREATE TABLE `USER` (
    `ID` BIGINT NOT NULL,
    `NAME` VARCHAR(0) NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

CREATE TABLE `RESOURCE` (
    `ID` BIGINT NOT NULL,
    `NAME` VARCHAR(0) NOT NULL,
    `USER_ID` BIGINT NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_USER`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_USER`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_RESOURCE_USER`
        FOREIGN KEY (`USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_RESOURCE`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_RESOURCE`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

), (resource.sql, DROP TABLE IF EXISTS `RESOURCE`;

CREATE TABLE `RESOURCE` (
    `ID` BIGINT NOT NULL,
    `NAME` VARCHAR(0) NOT NULL,
    `USER_ID` BIGINT NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_RESOURCE_USER`
        FOREIGN KEY (`USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_RESOURCE`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_RESOURCE`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

), (user.sql, DROP TABLE IF EXISTS `USER`;

CREATE TABLE `USER` (
    `ID` BIGINT NOT NULL,
    `NAME` VARCHAR(0) NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
)
  ENGINE = InnoDB
  CHARACTER SET = utf8mb4
  COMMENT = ''
  ROW_FORMAT = Dynamic;

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_USER`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_USER`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

)]
"""

const val postgresResult = """
[(all-tables.sql, DROP TABLE IF EXISTS "USER" CASCADE;
DROP TABLE IF EXISTS "RESOURCE" CASCADE;

CREATE TABLE "USER" (
    "ID" BIGINT NOT NULL,
    "NAME" TEXT NOT NULL,
    "CREATE_USER_ID" BIGINT NOT NULL,
    "MODIFY_USER_ID" BIGINT NOT NULL,
    PRIMARY KEY ("ID")
);

CREATE TABLE "RESOURCE" (
    "ID" BIGINT NOT NULL,
    "NAME" TEXT NOT NULL,
    "USER_ID" BIGINT NOT NULL,
    "CREATE_USER_ID" BIGINT NOT NULL,
    "MODIFY_USER_ID" BIGINT NOT NULL,
    PRIMARY KEY ("ID")
);

ALTER TABLE "USER"
    ADD CONSTRAINT "FK_BASE_CREATE_USER_USER"
        FOREIGN KEY ("CREATE_USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "USER"
    ADD CONSTRAINT "FK_BASE_MODIFY_USER_USER"
        FOREIGN KEY ("MODIFY_USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "RESOURCE"
    ADD CONSTRAINT "FK_RESOURCE_USER"
        FOREIGN KEY ("USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "RESOURCE"
    ADD CONSTRAINT "FK_BASE_CREATE_USER_RESOURCE"
        FOREIGN KEY ("CREATE_USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "RESOURCE"
    ADD CONSTRAINT "FK_BASE_MODIFY_USER_RESOURCE"
        FOREIGN KEY ("MODIFY_USER_ID")
            REFERENCES "USER" ("ID");

), (resource.sql, DROP TABLE IF EXISTS "RESOURCE" CASCADE;

CREATE TABLE "RESOURCE" (
    "ID" BIGINT NOT NULL,
    "NAME" TEXT NOT NULL,
    "USER_ID" BIGINT NOT NULL,
    "CREATE_USER_ID" BIGINT NOT NULL,
    "MODIFY_USER_ID" BIGINT NOT NULL,
    PRIMARY KEY ("ID")
);

ALTER TABLE "RESOURCE"
    ADD CONSTRAINT "FK_RESOURCE_USER"
        FOREIGN KEY ("USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "RESOURCE"
    ADD CONSTRAINT "FK_BASE_CREATE_USER_RESOURCE"
        FOREIGN KEY ("CREATE_USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "RESOURCE"
    ADD CONSTRAINT "FK_BASE_MODIFY_USER_RESOURCE"
        FOREIGN KEY ("MODIFY_USER_ID")
            REFERENCES "USER" ("ID");

), (user.sql, DROP TABLE IF EXISTS "USER" CASCADE;

CREATE TABLE "USER" (
    "ID" BIGINT NOT NULL,
    "NAME" TEXT NOT NULL,
    "CREATE_USER_ID" BIGINT NOT NULL,
    "MODIFY_USER_ID" BIGINT NOT NULL,
    PRIMARY KEY ("ID")
);

ALTER TABLE "USER"
    ADD CONSTRAINT "FK_BASE_CREATE_USER_USER"
        FOREIGN KEY ("CREATE_USER_ID")
            REFERENCES "USER" ("ID");

ALTER TABLE "USER"
    ADD CONSTRAINT "FK_BASE_MODIFY_USER_USER"
        FOREIGN KEY ("MODIFY_USER_ID")
            REFERENCES "USER" ("ID");

)]
"""

const val h2Result = """
[(all-tables.sql, DROP TABLE IF EXISTS `USER` CASCADE;
DROP TABLE IF EXISTS `RESOURCE` CASCADE;

CREATE TABLE `USER` (
    `ID` BIGINT NOT NULL,
    `NAME` CHARACTER VARYING(0) NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
);

CREATE TABLE `RESOURCE` (
    `ID` BIGINT NOT NULL,
    `NAME` CHARACTER VARYING(0) NOT NULL,
    `USER_ID` BIGINT NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
);

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_USER`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_USER`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_RESOURCE_USER`
        FOREIGN KEY (`USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_RESOURCE`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_RESOURCE`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

), (resource.sql, DROP TABLE IF EXISTS `RESOURCE` CASCADE;

CREATE TABLE `RESOURCE` (
    `ID` BIGINT NOT NULL,
    `NAME` CHARACTER VARYING(0) NOT NULL,
    `USER_ID` BIGINT NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_RESOURCE_USER`
        FOREIGN KEY (`USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_RESOURCE`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `RESOURCE`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_RESOURCE`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

), (user.sql, DROP TABLE IF EXISTS `USER` CASCADE;

CREATE TABLE `USER` (
    `ID` BIGINT NOT NULL,
    `NAME` CHARACTER VARYING(0) NOT NULL,
    `CREATE_USER_ID` BIGINT NOT NULL,
    `MODIFY_USER_ID` BIGINT NOT NULL,
    PRIMARY KEY (`ID`)
);

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_CREATE_USER_USER`
        FOREIGN KEY (`CREATE_USER_ID`)
            REFERENCES `USER` (`ID`);

ALTER TABLE `USER`
    ADD CONSTRAINT `FK_BASE_MODIFY_USER_USER`
        FOREIGN KEY (`MODIFY_USER_ID`)
            REFERENCES `USER` (`ID`);

)]
"""
